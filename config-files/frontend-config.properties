# This  is  the central  configuration  for WEB FRONTEND  of IntLib application.
# 
# This file  contains  just  a sample  configuration  and  is  not  used  by the
# application. Please copy it to WEB-INF/classes/config.properties and customize
# it to meet your needs.
#
# The  key  and  element  characters  #, !, =, and :  should be properly escaped
# with a preceding backslash to ensure that they are properly loaded.

# string diplayed next to the UV logo in GUI
installation.name = Test

# directory where frontend log should be stored (should not end with / or \ )
frontend.log.directory = /var/log/unifiedviews/frontend/
# how long should frontend keep log history
frontend.log.keepDays = 7

frontend.theme = UnifiedViewsTheme

# General settings (should end with "backend/working")
general.workingdir = /var/cache/unifiedviews/backend/working

# Backend application configuration
backend.host = 127.0.0.1
backend.port = 5010

# Connection configuration setting for relational database
# for mysql {
database.sql.driver  =  com.mysql.jdbc.Driver
database.sql.url  = jdbc:mysql://localhost:3306/unifiedviews?characterEncoding=utf8
database.sql.user = root
database.sql.password = root
}

# for postgresql {
#database.sql.driver = org.postgresql.Driver
#database.sql.url  =  jdbc:postgresql://localhost:5432/unifiedviews
#database.sql.user = root
#database.sql.password = root
# }


# Connection configuration setting for RDF database
# use local rdf platform {
# database.rdf.platform = localRDF
# }

# or use remote rdf platform (sesame) {
database.rdf.platform = remoteRDF
database.rdf.url = http://localhost:8080/openrdf-sesame/repositories/unifiedviews
database.rdf.user =
database.rdf.password =
# }

# or user virtuoso platform  {
#database.rdf.platform = virtuoso
#database.rdf.url = jdbc:virtuoso://localhost:1111/charset=UTF-8/log_enable=2
#database.rdf.user = dba
#database.rdf.password = dba
# }


# Administrator contact email for sending reports and failure notifications 
email.enabled = false
email.admin = admin@example.com
# use if email.enabled = true
#email.smtp.host = smtp.server.cz
#email.smtp.port = 25
#email.smtp.ttl = false
#email.from = odcs@xrg.mff.cuni.cz
#email.authorization = false
# use if email.authorization = true
#email.username = 
#email.password = 

# Configuration of DPU modules
module.path = /var/lib/unifiedviews/common

# reserved for developers
# module.frontend.expose = 
module.frontend.expose = sun.misc,sun.io,com.sun.nio.file

# ckan connection configuration
#ckan.location = http://localhost:5000/api/3/action/
#ckan.api.key = 

# Name of the admin permission which is able to see all entitites (pipelines)
admin.permission=administrator

# for Single Sign-on  {
#in case this property is true you can define relative address in property cas.security.check.url
#cas.behindProxy=false
#URL which needs to be called if the application wants to logout the CAS session
#logout.url=http://192.168.6.73:18080/unifiedviews/cas_logout
#CAS server URL
#cas.server.host=https://192.168.1.8:8443/cas2
#Callback URL for spring to authenticate the user.
#cas.security.check.url=http://192.168.6.73:18080/unifiedviews/login/cas
#CAS login URL
#cas.login.url=https://192.168.1.8:8443/cas2/login
#CAS logout URL
#cas.logout.url=https://192.168.1.8:8443/cas2/logout?service=http%3A%2F%2F192.168.7.42%3A18080%2Funifiedviews%2F
# }

#type of ownership user|organization
ownership.type=user
# credentials for Master REST API
master.api.user=master
master.api.password=commander
# Language configuration (e.g.: en_US, en)
locale = en
# credentials for Master REST API
master.api.user=master
